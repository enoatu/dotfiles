#!/bin/bash

set -eu

main() {
    echo '? gitconfig(git) or project_root(pr)'
    read answer
    case "$answer" in
    gitconfig)
        change_gitconfig
        ;;
    git)
        change_gitconfig
        ;;
    project_root)
        change_project_root
        ;;
    pr)
        change_project_root
        ;;
    *)
        printf "\e[30;42;1mexit\e[m\n"
        ;;
    esac
}

change_gitconfig() {
    echo '? (my or moove(m) or moove.proxy(mp)) '
    read git_answer
    case "$git_answer" in
    my)
        ln -sf ~/dotfiles/git/gitconfig.my ~/.gitconfig
        printf "\e[30;42;1mchanged\e[m\n"
        ;;
    m)
        ln -sf ~/dotfiles/git/gitconfig.moove ~/.gitconfig
        printf "\e[30;42;1mchanged\e[m\n"
        ;;
    moove)
        ln -sf ~/dotfiles/git/gitconfig.moove ~/.gitconfig
        printf "\e[30;42;1mchanged\e[m\n"
        ;;
    mp)
        ln -sf ~/dotfiles/git/gitconfig.moove.proxy ~/.gitconfig
        printf "\e[30;42;1mchanged\e[m\n"
        ;;
    moove.proxy)
        ln -sf ~/dotfiles/git/gitconfig.moove.proxy ~/.gitconfig
        printf "\e[30;42;1mchanged\e[m\n"
        ;;
    *)
        printf "\e[30;42;1mexit\e[m\n"
        ;;
    esac
}

PR_PATH=/tmp/project_root

change_project_root() {
    echo "current: `cat $PR_PATH`"
    echo '新しいプロジェクトルートを入力'
    read pr_answer
    echo $pr_answer > $PR_PATH
    echo "current: `cat $PR_PATH`"
}

main

exit 0
