#/usr/bin/env bash

main() {
  local action
  action=$1
  case $action in
    "gitstashpopreset")
      gitstashpopreset
      ;;
    "gsp")
      gitstashpopreset
      ;;
    "a")
      ga
      ;;
    "add")
      ga
      ;;
    "b")
      gb
      ;;
    "branch")
      gb
      ;;
    "c")
      echo "${@:2}"
      gbc "${@:2}"
      ;;
    "gbc")
      echo "${@:2}"
      gbc "${@:2}"
      ;;
    "help")
      show_help
      ;;
    *)
      show_help
  esac
}

gitstashpopreset() { ## gsp|gitstashpopreset 一度 git stash したものを pop してコンフリクトを解消する
  git checkout --ours . && git reset && git checkout .
}

ga() { ## add|a git add する
  local selected
  selected=$(\git status -s | fzf -m --ansi --preview="echo {} | awk '{print \$2}' | xargs \git diff" | awk '{print $2}')
  if [[ -n "$selected" ]]; then
    git add `paste -s - <<< $selected`
  fi
  git status
}

gb() { ## git branch 一覧を表示する
  # fzf で選択したブランチに切り替える
  # fzf の左側にはブランチ名,あればdescriptionを表示する
  # descriptionがある場合はgit-branch-descriptions のbranchname,descriptionの形式から取り出せる
  GIT_BRANCH_DESCRIPTIONS_PATH=enotiru-my-box/git-branch-descriptions
  if [ ! -d .git ]; then
    echo "not a git repository"
    return 1
  fi
  if [ ! -d enotiru-my-box ]; then
    mkdir enotiru-my-box
  fi
  if [ ! -f $GIT_BRANCH_DESCRIPTIONS_PATH ]; then
    touch $GIT_BRANCH_DESCRIPTIONS_PATH
  fi
  local branches
  branches=$(git branch --format="%(refname:short)" --sort=-committerdate)
  local descriptions
  descriptions=$(cat $GIT_BRANCH_DESCRIPTIONS_PATH)
  local branch
  local description
  local branch_description
  for branch in $branches; do
    # ダブルクォーテーションで囲まないと改行が消える
    branch_description=$(echo "$descriptions" | grep $branch)
    #echo $branch_description
    if [ -n "$branch_description" ]; then
      description=$(echo $branch_description | awk -F, '{print $2}')
      echo "$branch $description"
    else
      echo $branch
    fi
  done | fzf | awk '{print $1}' | xargs git checkout
}

gbc() { ## create|c git ブランチを作成
  # 第1引数にブランチ名を指定
  # 第2引数にdescriptionを指定
  # .git がない場合はエラー
  if [ ! -d .git ]; then
    echo "not a git repository"
    return 1
  fi
  # enotiru-my-box/ がない場合は作成する
  if [ ! -d enotiru-my-box ]; then
    mkdir enotiru-my-box
  fi
  local branch_name
  local description
  branch_name=$1
  # スペースを許可する
  description="${@:2}"
  echo $2
  # base_branch がなかったら現在のブランチを取得
  if [ -z "$2" ]; then
    echo "description is required"
    return 1
  fi
  if [ -z "$branch_name" ]; then
    echo "branch name is required"
    return 1
  fi
  git checkout -b $branch_name

  # git-branch-descriptions がない場合は作成する
  GIT_BRANCH_DESCRIPTIONS_PATH=enotiru-my-box/git-branch-descriptions
  if [ ! -f $GIT_BRANCH_DESCRIPTIONS_PATH ]; then
    touch $GIT_BRANCH_DESCRIPTIONS_PATH
  fi
  # git-branch-descriptions にbranchname,descriptionの形式で保存する
  echo "$branch_name,$description" >> $GIT_BRANCH_DESCRIPTIONS_PATH
}

show_help() { ## help|h ヘルプを表示する
  grep -E '{\s*##' $0 | awk 'BEGIN {FS="## "} {print $2}'
}

main $@
