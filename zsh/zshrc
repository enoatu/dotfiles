autoload -U compinit
compinit

setopt COMPLETE_IN_WORD

setopt IGNOREEOF

# 日本語を使用
export LANG=ja_JP.UTF-8

# パスを追加したい場合
export PATH="$HOME/bin:$PATH"

# 色を使用
autoload -Uz colors
colors

# 補完
autoload -Uz compinit
compinit

# emacsキーバインド
bindkey -e

# 他のターミナルとヒストリーを共有
setopt share_history
setopt extended_history

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# cdコマンドを省略して、ディレクトリ名のみの入力で移動
setopt auto_cd

# 自動でpushdを実行
setopt auto_pushd

# pushdから重複を削除
setopt pushd_ignore_dups

# コマンドミスを修正
setopt correct

# エイリアス
alias sudo='sudo ' #https://qiita.com/homines22/items/ba1a6d03df85e65fc85a
alias lst='ls -ltr --color=auto'
alias l='ls -ltr --color=auto'
alias la='ls -la --color=auto'
alias ll='ls -l --color=auto'
alias so='source'
alias v='vim'
alias vi='vim'
alias vz='vim ~/.zshrc'
#alias c='cdr'
# historyに日付を表示
alias h='fc -lt '%F %T' 1'
alias cp='cp -i'
alias rm='rm -i'
alias mkdir='mkdir -p'
#alias ..='c ../'
alias p='pushd'
alias diff='diff -U1'
alias exsh='exec $SHELL -l'
alias gs='git status'
alias a='git add'
alias c='git commit -m'
alias am='git commit --amend'
alias gb='git branch'
alias gd='git diff'
alias gds='git diff --staged'
alias gco='git checkout'
alias gl='git log'
alias gprom='git stash && git pull --rebase origin master && git stash pop'
alias cmw='~/dotfiles/bin/gitcommit.sh wrench'
alias cmp='~/dotfiles/bin/gitcommit.sh heavy_plus_sign'
alias cmm='~/dotfiles/bin/gitcommit.sh heavy_minus_sign'
alias cmr='~/dotfiles/bin/gitcommit.sh recycle'
alias cms='~/dotfiles/bin/gitcommit.sh space_invader'
alias cmb='~/dotfiles/bin/gitcommit.sh bug'

alias gcw='~/dotfiles/bin/gitcommit.sh wrench'
alias gcp='~/dotfiles/bin/gitcommit.sh heavy_plus_sign'
alias gcm='~/dotfiles/bin/gitcommit.sh heavy_minus_sign'
alias gcr='~/dotfiles/bin/gitcommit.sh recycle'
alias gcs='~/dotfiles/bin/gitcommit.sh space_invader'
alias gcb='~/dotfiles/bin/gitcommit.sh bug'
alias gcco='~/dotfiles/bin/gitcommit.sh construction'

alias ta='tmux attach'

dr() {
  local dirs=$HOME/dotfiles/.dirs
  arg=$1
  if [ -z "$arg" ]; then
    return;
  elif [ "$arg" = '--list' ]; then
    cat $dirs
  elif [ "$arg" = '-l' ]; then
    cat $dirs
  else
    target_dir=$(awk -F"\t" -v arg=$arg '$1 == arg {print $2}' $dirs)
    [ -z $target_dir ] && return 1
    cd $target_dir
  fi
}

dw() {
  local dirs=$HOME/dotfiles/.dirs
  arg=$1
  if [ -z "$arg" ]; then
    return;
  elif [ "$arg" = '--list' ]; then
    cat $dirs
  elif [ "$arg" = '-l' ]; then
    cat $dirs
  else
    echo "$arg\t`pwd`" >> $dirs
  fi
}

alias m='sudo -umoove'

# backspace,deleteキーを使えるように
stty erase '^H'
stty erase '^?'
##ctrl+sのロック, Ctrl+qのロック解除を無効にする
setopt no_flow_control

# 補完後、メニュー選択モードになり左右キーで移動が出来る
zstyle ':completion:*:default' menu select=2

# 補完で大文字にもマッチ
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# Ctrl+rでヒストリーのインクリメンタルサーチ、Ctrl+sで逆順
bindkey '^r' history-incremental-pattern-search-backward
bindkey '^s' history-incremental-pattern-search-forward

# コマンドを途中まで入力後、historyから絞り込み
# 例 ls まで打ってCtrl+pでlsコマンドをさかのぼる、Ctrl+bで逆順
autoload -Uz history-search-end

# cdrコマンドを有効 ログアウトしても有効なディレクトリ履歴
# cdr タブでリストを表示
autoload -Uz add-zsh-hook
autoload -Uz chpwd_recent_dirs cdr
add-zsh-hook chpwd chpwd_recent_dirs
# cdrコマンドで履歴にないディレクトリにも移動可能に
zstyle ":chpwd:*" recent-dirs-default true

# 複数ファイルのmv 例　zmv *.txt *.txt.bk
autoload -Uz zmv
alias zmv='noglob zmv -W'
export PERL5LIB=$HOME/work/Moove/lib:$HOME/work/moove/lib:$PERL5LIB
export PATH="$HOME/dotfiles/bin:$PATH"
export PATH="/usr/bin:/usr/local:/usr/local/bin:$PATH"
export PATH="/usr/lib:$PATH"
#autoload -Uz vcs_info
#setopt prompt_subst
#zstyle ':vcs_info:git:*' check-for-changes true
#zstyle ':vcs_info:git:*' stagedstr "%F{yellow}!"
#zstyle ':vcs_info:git:*' unstagedstr "%F{red}+"
#zstyle ':vcs_info:*' formats "%F{green}%c%u[%b]%f"
#zstyle ':vcs_info:*' actionformats '[%b|%a]'
#precmd () { vcs_info }
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

autoload -Uz vcs_info
setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "%F{yellow}!"
zstyle ':vcs_info:git:*' unstagedstr "%F{red}+"
zstyle ':vcs_info:*' formats "%F{green}%c%u[%b]%f"
zstyle ':vcs_info:*' actionformats '[%b|%a]'
precmd () { vcs_info }
GIT='${vcs_info_msg_0_}'

#black red green yellow blue magenta cyan white
PROMPT="%(?.%{${fg[green]}%}.%{${fg[red]}%})(%D %*%)%n${reset_color}@${hostcolor}${host}${reset_color}${fg[green]}[%j]${reset_color}${GIT}%~
%# "

[[ -n "$VIMRUNTIME" ]] && \
PROMPT="${bg[blue]}vim${reset_color}%(?.%{${fg[green]}%}.%{${fg[red]}%})(%D %*%)%n${reset_color}@${hostcolor}${host}${reset_color}${fg[green]}[%j]${reset_color}${GIT}%~
%# "

# tmux ログイン時起動
[[ $- != *i* ]] && return
[[ -z "$TMUX" ]] && exec tmux

