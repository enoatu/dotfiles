format = """
$jobs\
$time\
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$vcsh\
$fossil_branch\
$fossil_metrics\
$git_branch\
$git_commit\
$git_state\
${custom.git_user_name}\
${custom.git_stash_count}\
$git_metrics\
$git_status\
$directory
${custom.git_branch_description}
$character"""

right_format = """
$sudo\
$cmd_duration\
$line_break\
$battery\
$status\
$os\
$container\
$shell\
"""
add_newline = true

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 10

# Set 'foo' as custom color palette
palette = 'foo'

# Define custom colors
[palettes.foo]
# Overwrite existing color
blue = '21'
# Define new color
mustard = '#af8700'

[custom.git_branch_description]
when = true
require_repo = true
command = '''
# git-branch-descriptions がない場合return
GIT_BRANCH_DESCRIPTIONS_PATH=enotiru-my-box/git-branch-descriptions
[ ! -f $GIT_BRANCH_DESCRIPTIONS_PATH ] && return
# git-branch-descriptions にbranchname,descriptionの形式で保存されている
local branchname=$(git rev-parse --abbrev-ref HEAD)
local description=$(grep -E "^$branchname," $GIT_BRANCH_DESCRIPTIONS_PATH | cut -d ',' -f 2)
[ -n "$description" ] && echo "$description\n"
'''
style = 'bold green' # style はお好み

[custom.git_stash_count]
when = true
require_repo = true
command = """
local COUNT=$(git stash list 2>/dev/null | wc -l | tr -d ' ')
if [ "$COUNT" -gt 0 ]; then
  echo " $COUNT"
fi
"""

[custom.git_user_name]
when = true
require_repo = true
command = '''
echo "By $(git config user.name)"
'''
style = 'white' # style はお好み

[username]
style_user = 'fg:white'
style_root = 'red bold'
format = '[$user]($style)@'
disabled = false
show_always = true

[hostname]
ssh_only = false
style = 'fg:white'
format = '[$ssh_symbol](bold blue)[$hostname]($style) '
aliases = {'enoMacBook-Air' = 'local'}
disabled = false

[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '
symbol = ''

[time]
disabled = false
format = '[\($time\)]($style)'
time_format = '%y-%m-%dT%T'
style = 'green'

[jobs]
symbol = '✦'
style = 'bold purple'

[directory]
truncate_to_repo = false
truncation_length = 0

[git_status]
disabled = true

conflicted = '🏳'
ahead = '🏎💨'
behind = '😰'
diverged = '😵'
up_to_date = '✓'
#untracked = '🤷'
untracked = ''
#stashed = '📦'
stashed = ''
#modified = '📝'
modified = ''
staged = '[++\($count\)](green)'
renamed = '👅'
deleted = '🗑'

