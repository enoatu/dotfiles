[[plugins]]
repo = 'Shougo/dein.vim'

#かっこよく
[[plugins]]
repo    = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

#見やすく
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

#テーマ
#addじゃないと動かない
[[plugins]]
repo = 'rakr/vim-one'
hook_add = '''
filetype plugin indent on

syntax enable
colorscheme one

" tmux
set t_8b=[48;2;%lu;%lu;%lum
set t_8f=[38;2;%lu;%lu;%lum

let g:airline_theme = 'one'
" powerline enable(最初に設定しないとダメ)
let g:airline_powerline_fonts = 1
" タブバーをかっこよく
let g:airline#extensions#tabline#enabled = 1
" 選択行列の表示をカスタム(デフォルトだと長くて横幅を圧迫するので最小限に)
let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
" gitのHEADから変更した行の+-を非表示(vim-gitgutterの拡張)
let g:airline#extensions#hunks#enabled = 0
'''

#アイコン for テーマ
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# インデント
[[plugins]]
repo = 'Yggdroot/indentLine'

#indentLineプラグインによってjsonファイルの表示がおかしくなるため入れる
[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
let g:vim_json_syntax_conceal = 0
'''

#:Gdiffと打つとHEADと現在の状態を比較できる
#:Glog = git log
#:Gdiff コミット番号でそのdiffをとれる
#:Gread HEAD^^:%
#:Gblameでコミット詳細みれる
#:Gstatus = git status
#:Gwrite [path]
#:Gcommit
#:Gdiff [fugitive-revision]
#:Gedit [fugitive-revision]
#:Gmove [destination]
#:Gremove
#:Glog [args]
#:Gpush [args]
#:Gfetch [args]
#:Gmerge [args]
#:Gpull [args]
[[plugins]]
repo = 'tpope/vim-fugitive'

# bufferlist(lazyではできない)
[[plugins]]
#repo = '~/MyDevelopment/vim-bufferlist'
repo = 'enoatu/vim-bufferlist'
hook_add = '''
map <C-k> :call BufferList()<CR>
'''

# markdown
# md形式がおかしくなるため入れる
[[plugins]]
repo = 'preservim/vim-markdown'
# 折りたたみを無効にする
hook_add = '''
let g:vim_markdown_folding_disabled = 1
'''

#gitで管理してる場合、左側に差分を表示
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
"画面をガタガタ言わせない
"set signcolumn=yes
"タイピング終了後すぐに反映する
set updatetime=200
"master
let s:switchGutter=1
noremap <C-m> :call SwitchGutter()<CR>
function! SwitchGutter()
    if (s:switchGutter == 1)
        let g:gitgutter_diff_base =  'origin/main'
        let s:switchGutter=2
        echo "switchGutter: origin/main"
    elseif (s:switchGutter == 2)
        let g:gitgutter_diff_base =  'origin/dev'
        let s:switchGutter=3
        echo "switchGutter: origin/dev"
    else
        let g:gitgutter_diff_base =  ''
        echo "switchGutter: デフォルト"
    endif
    :GitGutterAll
endfunction
'''

###################################lazy#############################

# easy aline
[[plugins]]
repo = 'junegunn/vim-easy-align'
lazy = true
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

#ノードツリーをひらく デフォルトはctl + n
# addでないと動かない
[[plugins]]
repo = 'scrooloose/nerdtree'
lazy = true
hook_add = '''
nmap <C-n> :NERDTreeToggle<CR>
'''

# fで検索後移動できるようにする
[[plugins]]
repo = 'rhysd/clever-f.vim'
lazy = true
